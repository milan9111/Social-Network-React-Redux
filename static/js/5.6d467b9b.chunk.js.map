{"version":3,"sources":["components/common/FormsControls/FormsControl.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","DialogItem","s","dialog","active","src","alt","to","id","name","Message","message","maxLength10","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","item","index","messagesElements","messages","isAuth","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.6d467b9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__kvcTI\",\"error\":\"FormsControl_error__3Pvmg\",\"formSummaryError\":\"FormsControl_formSummaryError__1bHNL\"};","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined; \r\n}","import React from \"react\";\r\nimport styles from './FormsControl.module.css';\r\n\r\n\r\n \r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    \r\n    return(\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    \r\n    return(\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2BbYO\",\"dialogsItems\":\"Dialogs_dialogsItems__GEEMV\",\"active\":\"Dialogs_active__33Car\",\"dialog\":\"Dialogs_dialog__zWzky\",\"messages\":\"Dialogs_messages__2IsjF\",\"message\":\"Dialogs_message__IW7XF\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://png.pngtree.com/element_our/png_detail/20181022/man-avatar-icon-professional-man-character-business-man-avatar-carton-symbol-png_206531.jpg\" alt=\"avatar\" />\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink> \r\n        </div> \r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n            <div className={s.message}>{props.message}</div>  \r\n    );\r\n}\r\n\r\n \r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = (state.dialogs).map((item, index) => <DialogItem key={index} name={item.name} id={item.id} />);\r\n    let messagesElements = (state.messages).map((item, index) => <Message key={index} message={item.messages} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n           </div>\r\n           <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n                   validate={[required, maxLength10]} \r\n                   name={'newMessageText'}\r\n                   placeholder={'Enter your message'} />\r\n        </div>\r\n        <div>\r\n            <button>Send messages</button>\r\n        </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { Redirect } from \"react-router\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {   //получаем данные из стейта\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    } \r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n              return <Redirect to='/login' />\r\n            } else {\r\n              return <Component {...this.props}/>\r\n            }\r\n            \r\n        }\r\n    }\r\n  \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); // создаем КП (№1) для передачи стейта дальше \r\n      \r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\n \r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n     return{\r\n        sendMessage: (newMessageText) => {dispatch(addMessageActionCreator(newMessageText))}\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}